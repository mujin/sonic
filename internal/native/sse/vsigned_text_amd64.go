// +build amd64
// Code generated by asm2asm, DO NOT EDIT.

package sse

var _text_vsigned = []byte{
	// .p2align 4, 0x90
	// _vsigned
	0x55, // pushq        %rbp
	0x48, 0x89, 0xe5, //0x00000001 movq         %rsp, %rbp
	0x53, //0x00000004 pushq        %rbx
	0x48, 0x8b, 0x06, //0x00000005 movq         (%rsi), %rax
	0x4c, 0x8b, 0x0f, //0x00000008 movq         (%rdi), %r9
	0x4c, 0x8b, 0x5f, 0x08, //0x0000000b movq         $8(%rdi), %r11
	0x48, 0xc7, 0x02, 0x09, 0x00, 0x00, 0x00, //0x0000000f movq         $9, (%rdx)
	0x0f, 0x57, 0xc0, //0x00000016 xorps        %xmm0, %xmm0
	0x0f, 0x11, 0x42, 0x08, //0x00000019 movups       %xmm0, $8(%rdx)
	0x48, 0xc7, 0x42, 0x30, 0x00, 0x00, 0x00, 0x00, //0x0000001d movq         $0, $48(%rdx)
	0x48, 0x8b, 0x0e, //0x00000025 movq         (%rsi), %rcx
	0x48, 0x89, 0x4a, 0x18, //0x00000028 movq         %rcx, $24(%rdx)
	0x4c, 0x39, 0xd8, //0x0000002c cmpq         %r11, %rax
	0x0f, 0x83, 0x45, 0x00, 0x00, 0x00, //0x0000002f jae          LBB0_1
	0x41, 0x8a, 0x0c, 0x01, //0x00000035 movb         (%r9,%rax), %cl
	0x41, 0xb8, 0x01, 0x00, 0x00, 0x00, //0x00000039 movl         $1, %r8d
	0x80, 0xf9, 0x2d, //0x0000003f cmpb         $45, %cl
	0x0f, 0x85, 0x18, 0x00, 0x00, 0x00, //0x00000042 jne          LBB0_5
	0x48, 0x83, 0xc0, 0x01, //0x00000048 addq         $1, %rax
	0x4c, 0x39, 0xd8, //0x0000004c cmpq         %r11, %rax
	0x0f, 0x83, 0x25, 0x00, 0x00, 0x00, //0x0000004f jae          LBB0_1
	0x41, 0x8a, 0x0c, 0x01, //0x00000055 movb         (%r9,%rax), %cl
	0x49, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, //0x00000059 movq         $-1, %r8
	//0x00000060 LBB0_5
	0x8d, 0x79, 0xd0, //0x00000060 leal         $-48(%rcx), %edi
	0x40, 0x80, 0xff, 0x0a, //0x00000063 cmpb         $10, %dil
	0x0f, 0x82, 0x1a, 0x00, 0x00, 0x00, //0x00000067 jb           LBB0_7
	0x48, 0x89, 0x06, //0x0000006d movq         %rax, (%rsi)
	0x48, 0xc7, 0x02, 0xfe, 0xff, 0xff, 0xff, //0x00000070 movq         $-2, (%rdx)
	0x5b, //0x00000077 popq         %rbx
	0x5d, //0x00000078 popq         %rbp
	0xc3, //0x00000079 retq         
	//0x0000007a LBB0_1
	0x4c, 0x89, 0x1e, //0x0000007a movq         %r11, (%rsi)
	0x48, 0xc7, 0x02, 0xff, 0xff, 0xff, 0xff, //0x0000007d movq         $-1, (%rdx)
	0x5b, //0x00000084 popq         %rbx
	0x5d, //0x00000085 popq         %rbp
	0xc3, //0x00000086 retq         
	//0x00000087 LBB0_7
	0x80, 0xf9, 0x30, //0x00000087 cmpb         $48, %cl
	0x0f, 0x85, 0x35, 0x00, 0x00, 0x00, //0x0000008a jne          LBB0_12
	0x48, 0x8d, 0x78, 0x01, //0x00000090 leaq         $1(%rax), %rdi
	0x4c, 0x39, 0xd8, //0x00000094 cmpq         %r11, %rax
	0x0f, 0x83, 0x8c, 0x00, 0x00, 0x00, //0x00000097 jae          LBB0_11
	0x41, 0x8a, 0x0c, 0x39, //0x0000009d movb         (%r9,%rdi), %cl
	0x80, 0xc1, 0xd2, //0x000000a1 addb         $-46, %cl
	0x80, 0xf9, 0x37, //0x000000a4 cmpb         $55, %cl
	0x0f, 0x87, 0x7c, 0x00, 0x00, 0x00, //0x000000a7 ja           LBB0_11
	0x44, 0x0f, 0xb6, 0xd1, //0x000000ad movzbl       %cl, %r10d
	0x48, 0xb9, 0x01, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, //0x000000b1 movabsq      $36028797027352577, %rcx
	0x4c, 0x0f, 0xa3, 0xd1, //0x000000bb btq          %r10, %rcx
	0x0f, 0x83, 0x64, 0x00, 0x00, 0x00, //0x000000bf jae          LBB0_11
	//0x000000c5 LBB0_12
	0x4c, 0x39, 0xd8, //0x000000c5 cmpq         %r11, %rax
	0x4d, 0x89, 0xda, //0x000000c8 movq         %r11, %r10
	0x4c, 0x0f, 0x47, 0xd0, //0x000000cb cmovaq       %rax, %r10
	0x31, 0xc9, //0x000000cf xorl         %ecx, %ecx
	0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, //0x000000d1 .p2align 4, 0x90
	//0x000000e0 LBB0_13
	0x49, 0x39, 0xc2, //0x000000e0 cmpq         %rax, %r10
	0x0f, 0x84, 0x81, 0x00, 0x00, 0x00, //0x000000e3 je           LBB0_23
	0x49, 0x0f, 0xbe, 0x3c, 0x01, //0x000000e9 movsbq       (%r9,%rax), %rdi
	0x8d, 0x5f, 0xd0, //0x000000ee leal         $-48(%rdi), %ebx
	0x80, 0xfb, 0x09, //0x000000f1 cmpb         $9, %bl
	0x0f, 0x87, 0x35, 0x00, 0x00, 0x00, //0x000000f4 ja           LBB0_18
	0x48, 0x6b, 0xc9, 0x0a, //0x000000fa imulq        $10, %rcx, %rcx
	0x0f, 0x80, 0x14, 0x00, 0x00, 0x00, //0x000000fe jo           LBB0_17
	0x48, 0x83, 0xc0, 0x01, //0x00000104 addq         $1, %rax
	0x83, 0xc7, 0xd0, //0x00000108 addl         $-48, %edi
	0x49, 0x0f, 0xaf, 0xf8, //0x0000010b imulq        %r8, %rdi
	0x48, 0x01, 0xf9, //0x0000010f addq         %rdi, %rcx
	0x0f, 0x81, 0xc8, 0xff, 0xff, 0xff, //0x00000112 jno          LBB0_13
	//0x00000118 LBB0_17
	0x48, 0x83, 0xc0, 0xff, //0x00000118 addq         $-1, %rax
	0x48, 0x89, 0x06, //0x0000011c movq         %rax, (%rsi)
	0x48, 0xc7, 0x02, 0xfb, 0xff, 0xff, 0xff, //0x0000011f movq         $-5, (%rdx)
	0x5b, //0x00000126 popq         %rbx
	0x5d, //0x00000127 popq         %rbp
	0xc3, //0x00000128 retq         
	//0x00000129 LBB0_11
	0x48, 0x89, 0x3e, //0x00000129 movq         %rdi, (%rsi)
	0x5b, //0x0000012c popq         %rbx
	0x5d, //0x0000012d popq         %rbp
	0xc3, //0x0000012e retq         
	//0x0000012f LBB0_18
	0x4c, 0x39, 0xd8, //0x0000012f cmpq         %r11, %rax
	0x0f, 0x83, 0x2f, 0x00, 0x00, 0x00, //0x00000132 jae          LBB0_22
	0x41, 0x8a, 0x3c, 0x01, //0x00000138 movb         (%r9,%rax), %dil
	0x40, 0x80, 0xff, 0x2e, //0x0000013c cmpb         $46, %dil
	0x0f, 0x84, 0x14, 0x00, 0x00, 0x00, //0x00000140 je           LBB0_25
	0x40, 0x80, 0xff, 0x45, //0x00000146 cmpb         $69, %dil
	0x0f, 0x84, 0x0a, 0x00, 0x00, 0x00, //0x0000014a je           LBB0_25
	0x40, 0x80, 0xff, 0x65, //0x00000150 cmpb         $101, %dil
	0x0f, 0x85, 0x0d, 0x00, 0x00, 0x00, //0x00000154 jne          LBB0_22
	//0x0000015a LBB0_25
	0x48, 0x89, 0x06, //0x0000015a movq         %rax, (%rsi)
	0x48, 0xc7, 0x02, 0xfa, 0xff, 0xff, 0xff, //0x0000015d movq         $-6, (%rdx)
	0x5b, //0x00000164 popq         %rbx
	0x5d, //0x00000165 popq         %rbp
	0xc3, //0x00000166 retq         
	//0x00000167 LBB0_22
	0x49, 0x89, 0xc2, //0x00000167 movq         %rax, %r10
	//0x0000016a LBB0_23
	0x4c, 0x89, 0x16, //0x0000016a movq         %r10, (%rsi)
	0x48, 0x89, 0x4a, 0x10, //0x0000016d movq         %rcx, $16(%rdx)
	0x5b, //0x00000171 popq         %rbx
	0x5d, //0x00000172 popq         %rbp
	0xc3, //0x00000173 retq         
	//0x00000174 .p2align 2, 0x00
	//0x00000174 _MASK_USE_NUMBER
	0x02, 0x00, 0x00, 0x00, //0x00000174 .long 2
}
 
